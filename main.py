# Definimos una clase Usuario para manejar los datos de los usuarios registrados.

class Usuario:
    def __init__(self, id, nombre_usuario, contrase√±a):
        self.id = id
        self.nombre_usuario = nombre_usuario
        self.contrase√±a = contrase√±a

    def __repr__(self):
        return f"ID: {self.id}, Usuario: {self.nombre_usuario}"

# Lista para almacenar los usuarios registrados

usuarios = []

# Funciones para manejar el registro y el inicio de sesi√≥n de usuarios

def registro():

    id_usuario = len(usuarios) + 1

    while True:
        try:
            nombre_usuario = input("Ingrese el nombre de usuario: ").strip()
            if not nombre_usuario:
                raise ValueError("‚ùå El nombre de usuario no puede estar vac√≠o. Int√©ntelo nuevamente.\n")

            for usuario in usuarios:
                if usuario.nombre_usuario == nombre_usuario:
                    raise ValueError(f"‚ùå El nombre de usuario '{nombre_usuario}' ya est√° en uso. Int√©ntelo con otro.\n")
            break
        except ValueError as e:
            print(e)
        except Exception as e:
            print(f"‚ùå Error inesperado: {e}. Int√©ntelo nuevamente.\n")      

    while True:
        try:
            contrase√±a = input("Ingrese la contrase√±a: ").strip()
            if not contrase√±a:
                raise ValueError("‚ùå La contrase√±a no puede estar vac√≠a. Int√©ntelo nuevamente.\n")
            break
        except ValueError as e:
            print(e)
        except Exception as e:
            print(f"‚ùå Error inesperado: {e}. Int√©ntelo nuevamente.\n")

    nuevo_usuario = Usuario(id_usuario, nombre_usuario, contrase√±a)
    usuarios.append(nuevo_usuario)
    print(f"\n‚úÖ Usuario '{nombre_usuario}' registrado con √©xito.\n")

def inicio_sesion():

    while True:
        try:
            nombre_usuario = input("Ingrese el nombre de usuario: ").strip()
            if not nombre_usuario:
                raise ValueError("‚ùå El nombre de usuario no puede estar vac√≠o. Int√©ntelo nuevamente.\n")
            break
        except ValueError as e:
            print(e)
        except Exception as e:
            print(f"‚ùå Error inesperado: {e}. Int√©ntelo nuevamente.\n")

    while True:
        try:
            contrase√±a = input("Ingrese la contrase√±a: ").strip()
            if not contrase√±a:
                raise ValueError("‚ùå La contrase√±a no puede estar vac√≠a. Int√©ntelo nuevamente.\n")
            break
        except ValueError as e:
            print(e)
        except Exception as e:
            print(f"‚ùå Error inesperado: {e}. Int√©ntelo nuevamente.\n")

    for usuario in usuarios:
        if usuario.nombre_usuario == nombre_usuario and usuario.contrase√±a == contrase√±a:
            print(f"\n‚úÖ Inicio de sesi√≥n exitoso. ¬°Bienvenido, {nombre_usuario}!\n")
            mostrar_usuarios()
            menu_post_listado()
            return

    print("\n‚ùå Usuario o contrase√±a incorrectos.\n")

# Funci√≥n para mostrar la lista de usuarios registrados

def mostrar_usuarios():

    if not usuarios:
        print("No hay usuarios registrados.\n")
    else:
        print("üë• Lista de usuarios registrados:")
        for usuario in usuarios:
            print(usuario)
        print()

# Funci√≥n para mostrar el men√∫ principal y manejar las opciones de registro e inicio de sesi√≥n

def menu_principal():

    print("üëã Bienvenido al sistema de gesti√≥n de usuarios.\n")

    while True:
        print("===== Men√∫ Principal =====")
        print("1. Registrar usuario")
        print("2. Iniciar sesi√≥n")
        print("3. Salir")
        try:
            opcion = input("Seleccione una opci√≥n: ").strip()
            if opcion == "1":
                registro()
            elif opcion == "2":
                inicio_sesion()
            elif opcion == "3":
                print("üëã ¬°Hasta luego!")
                break
            else:
                print("‚ùå Opci√≥n no v√°lida. Por favor, seleccione 1, 2 o 3.\n")
        except Exception as e:
            print(f"‚ùå Error inesperado: {e}\n")

def menu_post_listado():

    while True:
        print("====== ¬øQu√© desea hacer ahora? ======")
        print("1. Volver al men√∫ principal")
        print("2. Salir del programa")
        opcion = input("Seleccione una opci√≥n: ").strip()
        if opcion == "1":
            return  # Vuelve al men√∫ principal
        elif opcion == "2":
            print("üëã ¬°Hasta luego!")
            exit()
        else:
            print("‚ùå Opci√≥n no v√°lida. Por favor, seleccione 1 o 2.\n")

# Ejecutar el programa

if __name__ == "__main__":
    menu_principal()

#probamos el programa